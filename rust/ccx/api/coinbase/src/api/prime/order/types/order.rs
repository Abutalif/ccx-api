use crate::api::prime::prelude::*;
use crate::api::prime::{PortfolioOrderSide, PortfolioOrderTimeInForce};
use crate::api::prime::PortfolioOrderStatus;
use crate::api::prime::PortfolioOrderType;

#[derive(Debug, Serialize, Deserialize, Clone, Eq, PartialEq)]
pub struct AccountPortfolioOrder {
    /// The unique order ID generated by Coinbase.
    pub id: Uuid,
    /// The ID of the user that created the order.
    pub user_id: String,
    /// The ID of the portfolio that owns the order.
    pub portfolio_id: Uuid,
    /// The ID of the product being traded by the order.
    pub product_id: Atom,
    pub side: PortfolioOrderSide,
    /// A client-generated order ID used for reference purposes (note: order will be rejected
    /// if this ID is not unique among all currently active orders).
    pub client_order_id: String,
    pub r#type: PortfolioOrderType,
    /// Order size in base asset units (either `base_quantity` or `quote_value` is required).
    pub base_quantity: Decimal,
    /// Order size in quote asset units, i.e. the amount the user wants to spend (when buying) or
    /// receive (when selling); the quantity in base units will be determined based on the market
    /// liquidity and indicated `quote_value`. Either `base_quantity` or `quote_value` is required.
    pub quote_value: Decimal,
    /// The limit price (required for limit orders).
    pub limit_price: Decimal,
    /// The start time of the order in UTC (only applies to TWAP orders).
    // TODO time type
    pub start_time: String,
    /// The expiry time of the order in UTC (applies to TWAP orders and limit orders
    /// with `time_in_force` set to `GTD`).
    // TODO time type
    pub expiry_time: String,
    pub status: PortfolioOrderStatus,
    pub time_in_force: PortfolioOrderTimeInForce,
    /// The order creation time as a UTC timestamp.
    // TODO time type
    pub created_at: String,
    /// Size filled (in base asset units).
    pub filled_quantity: Decimal,
    /// Market value filled (in quote asset units).
    pub filled_value: Decimal,
    /// Indicates the average `filled_price`.
    pub average_filled_price: Decimal,
    /// Total commission paid on this order (in quote asset units)
    /// -- only applicable for partially- or fully-filled orders.
    pub commission: Decimal,
}
